import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { NavBar } from "@/components/NavBar/NavBar";
import { createClient } from "@/prismicio";
import { NavBarPrismic } from "@/components/NavBar/NavBarPrismic";
import {
  getProductBySku,
  getProductBySlug,
  getProducts,
  searchProducts,
} from "@/fetch/woocommerce/products";
import { inspect } from "util";
import {
  validateWooCommerceProductsResponse,
  validateWooCommerceSingleProductResponse,
} from "@/types/validation/woocommerce/woocommerce";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export async function generateMetadata(): Promise<Metadata> {
  const client = createClient();

  const page = await client.getSingle("settings");
  const test = await searchProducts("dignity tee");
  const json = await test.json();
  const parsed = validateWooCommerceProductsResponse(json);
  console.log(inspect(parsed, false, null));
  console.log("success");

  return {
    title: page.data.site_title || "Dignity Apparel",
    description: page.data.meta_description || "Dignity Apparel - Main Site",
    openGraph: {
      images: [page.data.og_image.url || ""],
    },
  };
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <NavBarPrismic />
        {children}
      </body>
    </html>
  );
}
